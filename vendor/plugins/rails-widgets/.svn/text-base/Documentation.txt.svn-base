------------------------
			Urls for project
------------------------

Porject creator:
http://seesaw.it/

Code location:
http://code.google.com/p/rails-widgets/

Developer group:
http://groups.google.com/group/rails-widgets-dev

Usergroup:
http://groups.google.com/group/rails-widgets

------------------------
			Installation
------------------------
Check out from SVN:
svn checkout http://rails-widgets.googlecode.com/svn/trunk/ rails-widgets-read-only

Install as a plugin:
ruby script/plugin http://rails-widgets.googlecode.com/svn/trunk/

Slideshow of usage:
http://www.slideshare.net/paolo.dona/rails-widgets-by-paolo-dona-at-railstoitaly

------------------------
			Usage
------------------------

- - Tabnav - -

creation:
ruby script/generate tabnav main

locate and change the file, to fit your needs here:
	app/views/widgets/_main_tabnav.rhtml
	
Note: you could change the name to _main_tabnav.html.erb for Rails +2.0

Add in your layout file:
<html>
	<head>....</head>
	<body>
		
		<% tabnav :main do %>
		
			....your contense goes here, like:
		  <%= yield %>
		
		<% end %>
		
	</body>
</html>

* Add tabs to the tab file *
edit:
	app/view/widgets/_main_tabnav.rhtml

	add_tab do |t|
		t.named "name of tab"
		t.links_to :controller => "orders" # could also be :controller => "orders", :action => "show"
	end	

* create custum css *
edit:
	app/view/widgets/_main_tabnav.rhtml
	
	change:
	render_tabnav :main, :generate_css => true do
	
	to:
	render_tabnav :main, :generate_css => false do
	
* Highlighting *
edit:
	app/view/widgets/_main_tabnav.rhtml
	
	add:	
	t.highlights_on :controller => "locations"
	
	to the relevant tab
	
* REST tabs links*
edit:
	app/view/widgets/_main_tabnav.rhtml

	change:
	t.links_to :controller => "orders"
	
	to:
	t.links_to hash_for_orders_path

* conditional tabs *
You only want to show a tab, if a user is logged in
example:
	add_tab do |t|
      t.named 'Software'
      t.links_to hash_for_programs_path
       t.highlights_on :controller => "programs"
   end if logged_in?	

* nested tabs	*
ruby script/generate tabnav invoices

inline tabnav (with out box)
<%= tabnav :invoices %>

Incert the code displayed abow, in your relevant view file(s)
line /view/invoices/index.rhtml | show.rhtml | ....

edit:
	app/view/widgets/_invoices_tabnav.rhtml

	add_tab do |t|
		t.named "show"
		t.links_to :controller => "invoices", :action => "show"
	end	
	
	add_tab do |t|
		t.named "new"
		t.links_to :controller => "invoices", :action => "new"
	end	
	
	add_tab do |t|
		t.named "edit"
		t.links_to :controller => "invoices", :action => "edit"
	end	

Note: remember to add highlighting to main navigation bar, to maintain highlighting.
- - Navigation - -
Installation:
	ruby script/generate navigation main
		
add to view/layout file:
	<%= navigation :main %>	
	
edit navigation link:
	app/view/widgets/_main_navigation.rhtml	

		add_item do |i|
			i.named "home"
			i.links_to :controller => "invoices"
		end
		
		add_item :link => "http://www.seesaw.it"
		
- - Tooltips - -
add in view file:

			<% tooltip image_tag('question_mark') do %>
				<h2>Starting page </h2>
				<p>The first page you see</p>
			<% end %>	
			
Ajax version:
			<% 
				tooltip do |t|
					t.named image_tag('question_mark')
					t.links_to_remote :action => 'first_time'
				end
			%>
										
- - Tableizer - -
	<% tableize :customers, @customers,
							:header => 'Listing Customers',
							:generate_css => 'true' do |customer| %>
							
							<h3><%= customer.name %></h3>
							<p>
								Code: <%= customer.code %>
								Place order: <%= customer.order %>
								<%= link_to 'show', .... %>
								<%= link_to 'Edit', .... %>
								<%= link_to 'Destroy', .... %>
							</p>
	<% end %>	
							
- - ShowHide - -

usage in view, array usage

<% for user in @users %>
	<%=h user.login %>
		<%= show_detail_for user %>
			
			<% detail_for user do %>
			 details ....
			 <%=h user.email %>
			 more details....
			 <%= hide_detail_for user %>
		 <% end %>
<% end %>

- - Column layout - -

		column_layout :columns => 3 do
		
			add_part do |p|
				p.column 1
				p.named "news"
				p.contains :controller => "news"
			end
			
			add_part do |p|
				p.column 2
				p.named "Weather"
				p.contains :controller => "weather"
			end
			
		end	

- - Nubbins widget - -
	
------------------------
			Troubleshoot
------------------------